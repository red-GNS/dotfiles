#!/bin/sh

export TORCH_HOME="/home/thoth/melbayad/scratch/.torch"

function setcuda81_aquarius() {
  export CUDA="/scratch/aquarius/tlucas/Libs/cuda8RCpatched"
  export CUDA_libs="$CUDA/lib64"
  export CUDA_bin="$CUDA/bin"
  export LD_LIBRARY_PATH="$CUDA_libs:$LD_LIBRARY_PATH"
  export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$CUDA/include"
  export C_INCLUDE_PATH="$C_INCLUDE_PATH:$CUDA/include"
  export PATH="$CUDA_bin:$PATH"
}

function setcudnn51_aquarius() {
  #export CUDNN_ROOT="/scratch/algorab/mdvornik/Libs/cudnn_5.1/cuda"
  export CUDNN_ROOT="/scratch/aquarius/tlucas/Libs/cudnn_5.1/cuda"
  export CUDNN_LIB_DIR=$CUDNN_ROOT"/lib64"
  export CUDNN_INCLUDE_DIR=$CUDNN_ROOT"/include"
  export LD_LIBRARY_PATH="$CUDNN_ROOT/lib64:$LD_LIBRARY_PATH"
  export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$CUDNN_ROOT/include"
  export C_INCLUDE_PATH="$C_INCLUDE_PATH:$CUDNN_ROOT/include"
  export LIBRARY_PATH="$CUDNN_ROOT/lib64:$LIBRARY_PATH"
}

function setcuda81_algorab () {
  export CUDA="/scratch/algorab/tlucas/src/cuda8RCpatched"
  export CUDA_libs="$CUDA/lib64"
  export CUDA_bin="$CUDA/bin"
  export LD_LIBRARY_PATH="$CUDA_libs:$LD_LIBRARY_PATH"
  export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$CUDA/include"
  export C_INCLUDE_PATH="$C_INCLUDE_PATH:$CUDA/include"
  export PATH="$CUDA_bin:$PATH"
}

function setcudnn50_konstantin () {
  export CUDNN_ROOT="/home/lear/kshmelko/scratch/libs/cudnn5"
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$CUDNN_ROOT/lib64"
  export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$CUDNN_ROOT/include"
  export C_INCLUDE_PATH="$C_INCLUDE_PATH:$CUDNN_ROOT/include"
  export LIBRARY_PATH="$LIBRARY_PATH:$CUDNN_ROOT/lib64"
}

function setg(){ 
  	echo "Setting cuda 8.1, cudnn 5.0 and sourcing ubuntu virtual environment."
	setcuda81_aquarius
	setcudnn50_konstantin
}

inter (){
    BQ=''
    K40=''
    while getopts 'bk' flag; do
        echo "Reading flag "$flag
        case "${flag}" in
            b) BQ='true' ;;
            k) K40='true' ;;
            *) error "Unexpected option ${flag}" ;;
        esac
    done
    shift $((OPTIND-1))
    if [ $K40 ]; then
        oarprop="\"gpumem>"$1"\""
    else
        oarprop="\"not gpumodel='k40m' and gpumem>"$1"\""
    fi
    echo "Properties:" $oarprop
    if [ $BQ ]; then
        echo "Interactive besteffort job"
        cmd="ssh edgar -t oarsub -I -l \"walltime=10:0:0\" -n debug -t besteffort -d $(pwd)"
    else
        echo "Interactive default job"
        cmd="ssh edgar -t oarsub -I -l \"walltime=10:0:0\" -n debug -d $(pwd) -p $(echo $oarprop)"
        echo "Running" $cmd
    fi
    eval $cmd
}
alias sg="ssh -t edgar oarsub -I -d $(pwd) -l \"walltime=10:0:0\" -p \"\\\"gpumodel='gtx1080' or gpumodel='gtx1080_ti'\\\"\""
alias lg="ssh -t edgar oarsub -I -d $(pwd) -l \"walltime=10:0:0\" -p \"\\\"gpumem > 12000\\\"\""



